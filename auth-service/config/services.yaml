# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    env(MONGODB_URL): ''
    env(MONGODB_DB): ''

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Service\AuthService:
        arguments:
            $documentManager: '@doctrine_mongodb.odm.document_manager'
            $passwordHasher: '@security.password_hasher'

    App\Controller\AuthController:
        arguments:
            $documentManager: '@doctrine_mongodb.odm.document_manager'
            $passwordHasher: '@security.password_hasher'
            $jwtManager: '@lexik_jwt_authentication.jwt_manager'
            $blacklistService: '@App\Service\BlacklistService'
            $authService: '@App\Service\AuthService'
            $jwtEncoder: '@lexik_jwt_authentication.encoder'

    App\Service\BlacklistService:
        arguments:
            $dm: '@doctrine_mongodb.odm.document_manager'
            $cache: '@cache.app'

    App\EventListener\TokenValidationListener:
        arguments:
            $blacklistService: '@App\Service\BlacklistService'
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_decoded, method: onJWTDecoded }
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_not_found, method: onJWTNotFound }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
